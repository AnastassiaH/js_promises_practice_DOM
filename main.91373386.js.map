{"version":3,"sources":["scripts/main.js"],"names":["showMessage","message","className","div","document","createElement","dataset","qa","classList","add","textContent","body","append","clickPromise","Promise","resolve","addEventListener","contextMenuPromise","firstPromise","reject","then","setTimeout","Error","res","catch","secondPromise","race","alert","thirdPromise","all","value"],"mappings":";AAAA,aAEA,IAAMA,EAAc,SAACC,EAASC,GACtBC,IAAAA,EAAMC,SAASC,cAAc,OAEnCF,EAAIG,QAAQC,GAAK,eACjBJ,EAAIK,UAAUC,IAAIP,GAClBC,EAAIO,YAAcT,EAClBG,SAASO,KAAKC,OAAOT,IAGjBU,EAAe,IAAIC,QAAQ,SAAAC,GAC/BX,SAASY,iBAAiB,QAAS,WACjCD,QAIEE,EAAqB,IAAIH,QAAQ,SAAAC,GACrCX,SAASY,iBAAiB,cAAe,WACvCD,QAIEG,EAAe,IAAIJ,QAAQ,SAACC,EAASI,GACzCN,EACGO,KAAK,WAAML,OAAAA,EAAQ,gCAEtBM,WAAW,WACTF,EAAO,IAAIG,MAAM,gCAChB,OAGLJ,EACGE,KAAK,SAAAG,GAAOvB,OAAAA,EAAYuB,EAAK,aAC7BC,MAAM,SAAAD,GAAOvB,OAAAA,EAAYuB,EAAK,aAEjC,IAAME,EAAgB,IAAIX,QAAQ,SAACC,EAASI,GAC1CL,QAAQY,KAAK,CAACb,EAAcI,IACzBG,KAAK,WAAML,OAAAA,EAAQ,mCAGxBU,EACGL,KAAK,SAAAG,GAAOvB,OAAAA,EAAYuB,EAAK,aAC7BC,MAAM,SAAAD,GAAOI,OAAAA,MAAMJ,KAEtB,IAAMK,EAAe,IAAId,QAAQ,SAAAC,GAC/BD,QAAQe,IAAI,CAAChB,EAAcI,IACxBG,KAAK,SAACU,GAAUf,OAAAA,EAAQ,kCAG7Ba,EACGR,KAAK,SAAAG,GAAOvB,OAAAA,EAAYuB,EAAK,aAC7BC,MAAM,SAAAD,GAAOI,OAAAA,MAAMJ","file":"main.91373386.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst showMessage = (message, className) => {\n  const div = document.createElement('div');\n\n  div.dataset.qa = 'notification';\n  div.classList.add(className);\n  div.textContent = message;\n  document.body.append(div);\n};\n\nconst clickPromise = new Promise(resolve => {\n  document.addEventListener('click', () => {\n    resolve();\n  });\n});\n\nconst contextMenuPromise = new Promise(resolve => {\n  document.addEventListener('contextmenu', () => {\n    resolve();\n  });\n});\n\nconst firstPromise = new Promise((resolve, reject) => {\n  clickPromise\n    .then(() => resolve('First promise was resolved'));\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nfirstPromise\n  .then(res => showMessage(res, 'success'))\n  .catch(res => showMessage(res, 'warning'));\n\nconst secondPromise = new Promise((resolve, reject) => {\n  Promise.race([clickPromise, contextMenuPromise])\n    .then(() => resolve('Second promise was resolved'));\n});\n\nsecondPromise\n  .then(res => showMessage(res, 'success'))\n  .catch(res => alert(res));\n\nconst thirdPromise = new Promise(resolve => {\n  Promise.all([clickPromise, contextMenuPromise])\n    .then((value) => resolve('Third promise was resolved'));\n});\n\nthirdPromise\n  .then(res => showMessage(res, 'success'))\n  .catch(res => alert(res));\n"]}